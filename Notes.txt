mkdir FastApi
cd FastApi

python -m venv env
env\Scripts\activate.bat
pip install "fastapi[standard]"

To run the file -> fastapi dev filename.py


mandatory ->

from fastapi import FastAPI
app = FastAPI()
@app.get(path) , @app.post(path), @app.put(path), @app.delete(path)

methods: 

OPTIONS
HEAD
PATCH
TRACE


Quick rule:

Path parameter = part of the URL structure (/items/{id})

Query parameter = comes after ? (?q=10&limit=20)


Annotated[str | None, Query(max_length=10)] = None
str|None=Query(default=None,max_length=10)
Annotated[list[int],Query()]=[1,2]


Rule of thumb:

Use Path → when parameter is in /{...}

Use Query → when parameter is after ?

Error: if your seeing this error-> you have add =None in the query parameter in the function.

{'detail': [{'type': 'missing', 'loc': ['query', 'query'], 'msg': 'Field required', 'input': None}]}

Path()
Query()

parameters->

title
description
alias
min_length
max_length
min_digit
max_digit
gt - greater than
lt - lesser than
ge - greater than or equal to
le - lesser than or equal to


see only path or query parameter in get method .don't see in post method just required or not required.

Field() is only used inside Pydantic models (like BaseModel).
For function parameters (e.g., in FastAPI routes), use Query(), Path(), or Body(), not Field().


Body() marks a parameter to come from the JSON body of the request

syntax:
parameter:str = Path() 
parameter:str|None = Query(default=None)

parameter:Annotated[str,Path()]
parameter:Annotated[str,Query()] = None

Path(default=None) ->Error
assert default is ..., "Path parameters cannot have a default value"

Annotated[str,Query(default=None)] -> Error 

AssertionError: `Query` default value cannot be set in `Annotated` for 'name'. 
Set the default value with `=` instead.


Annotated[str,Query()]=None -> Correct


name:str = Query() -> required Field
name:Annotated[str,Query]-> required Field

instead -> 

name:str = Query(default=None)
name:Annotated[str,Query()] = None

BaseModel -> use Field()
Normal Function-> use Path(),Query(),Body()

Note! if you are using BaseModel the request wil be in json format . don't except to be in url
Note!

Annotated[BaseModel,Query()]-> requests.post(url) accepts default value.
Annotated[BaseModel,Body()] -> requests.post(url) json=data is mandatory.



Best Practice:

Use Field() inside Pydantic models to define metadata, default values, constraints, etc.

Use Query(), Path(), Body() in your FastAPI endpoint function parameters to control how input is extracted.

Field(max_digits=12)-> applied for only decimal field.from decimal import Decimal


In Annotated[CookieModel,Cookie()] = None  the Cookie() is always required even though if you are using = None


def aribitery_keyword_argument(**kwargs):
    def get_name(name,**kwargs):
        print(name)
        print(kwargs)

        def get_age(age,**kwargs):
            print(age)
            print(kwargs)

            def get_salary(salary,**kwargs):
                print(salary)
                print(kwargs)

            get_salary(**kwargs)
        get_age(**kwargs)
    get_name(**kwargs)

aribitery_keyword_argument(name="Jagan",age=20,salary=20000)
